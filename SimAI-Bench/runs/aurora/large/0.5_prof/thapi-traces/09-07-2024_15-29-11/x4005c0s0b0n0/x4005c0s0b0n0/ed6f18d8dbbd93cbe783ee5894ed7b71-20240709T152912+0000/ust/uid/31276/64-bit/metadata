/* CTF 1.8 */

/* This was generated by a Babeltrace `sink.ctf.fs` component. */

trace {
	major = 1;
	minor = 8;
	uuid = "9b2990d9-9b6d-4bbc-a163-ffed52390770";
	byte_order = le;
	packet.header := struct {
		integer { size = 32; align = 8; base = x; } magic;
		integer { size = 8; align = 8; } uuid[16];
		integer { size = 64; align = 8; } stream_id;
		integer { size = 64; align = 8; } stream_instance_id;
	} align(8);
};

env {
	domain = "ust";
	tracer_name = "lttng-ust";
	tracer_major = 2;
	tracer_minor = 12;
	tracer_buffering_scheme = "uid";
	tracer_buffering_id = 31276;
	architecture_bit_width = 64;
	trace_name = "ed6f18d8dbbd93cbe783ee5894ed7b71";
	trace_creation_datetime = "20240709T152912+0000";
	hostname = "x4005c0s0b0n0";
};

clock {
	name = monotonic;
	description = "Monotonic Clock";
	freq = 1000000000;
	precision = 0;
	offset_s = 1720463864;
	offset = 494274959;
	absolute = true;
	uuid = "afcf9da0-8001-4db5-b4ba-e8aaaaea92b1";
};

stream {
	id = 0;
	packet.context := struct {
		integer { size = 64; align = 8; } packet_size;
		integer { size = 64; align = 8; } content_size;
		integer { size = 64; align = 8; map = clock.monotonic.value; } timestamp_begin;
		integer { size = 64; align = 8; map = clock.monotonic.value; } timestamp_end;
		integer { size = 64; align = 8; } events_discarded;
		integer { size = 64; align = 8; } packet_seq_num;
		integer { size = 32; align = 8; } _cpu_id;
	} align(8);

	event.header := struct {
		integer { size = 64; align = 8; } id;
		integer { size = 64; align = 8; map = clock.monotonic.value; } timestamp;
	} align(8);
	event.context := struct {
		integer { size = 32; align = 8; signed = true; } _vpid;
		integer { size = 32; align = 8; signed = true; } _vtid;
	} align(8);
};

event {
	name = "lttng_ust_ze_properties:driver";
	stream_id = 0;
	id = 2855;
	loglevel = 13;
	fields := struct {
		integer { size = 64; align = 8; base = x; } _hDriver;
		integer { size = 64; align = 8; } __pDriverProperties_val_length;
		string { encoding = UTF8; } _pDriverProperties_val;
	} align(8);
};

event {
	name = "lttng_ust_ze_build:log";
	stream_id = 0;
	id = 2862;
	loglevel = 13;
	fields := struct {
		string { encoding = UTF8; } _buildLog;
	} align(8);
};

event {
	name = "lttng_ust_opencl_devices:device_name";
	stream_id = 0;
	id = 3198;
	loglevel = 13;
	fields := struct {
		integer { size = 64; align = 8; base = x; } _device;
		string { encoding = UTF8; } _name;
	} align(8);
};

event {
	name = "lttng_ust_opencl_build:infos";
	stream_id = 0;
	id = 3195;
	loglevel = 13;
	fields := struct {
		integer { size = 64; align = 8; base = x; } _program;
		integer { size = 64; align = 8; base = x; } _device;
		integer { size = 32; align = 8; signed = true; } _build_status;
		string { encoding = UTF8; } _build_options;
		string { encoding = UTF8; } _build_log;
	} align(8);
};

event {
	name = "lttng_ust_opencl_build:infos_1_2";
	stream_id = 0;
	id = 3196;
	loglevel = 13;
	fields := struct {
		integer { size = 64; align = 8; base = x; } _program;
		integer { size = 64; align = 8; base = x; } _device;
		integer { size = 32; align = 8; } _binary_type;
	} align(8);
};

event {
	name = "lttng_ust_opencl_build:infos_2_0";
	stream_id = 0;
	id = 3197;
	loglevel = 13;
	fields := struct {
		integer { size = 64; align = 8; base = x; } _program;
		integer { size = 64; align = 8; base = x; } _device;
		integer { size = 64; align = 8; } _build_global_variable_total_size;
	} align(8);
};

event {
	name = "lttng_ust_opencl_arguments:argument_info";
	stream_id = 0;
	id = 3193;
	loglevel = 13;
	fields := struct {
		integer { size = 64; align = 8; base = x; } _kernel;
		integer { size = 32; align = 8; } _arg_index;
		integer { size = 32; align = 8; } _address_qualifier;
		integer { size = 32; align = 8; } _access_qualifier;
		string { encoding = UTF8; } _type_name;
		integer { size = 64; align = 8; } _type_qualifier;
		string { encoding = UTF8; } _name;
	} align(8);
};

